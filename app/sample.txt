const openSource = {
    githubConvertedToken: "5964a8e0530ecf427df2d2e20e817eeda850f31e",
    githubUserName: "inspirion33",
};

// const fetch = require("node-fetch");
// var fs = require("fs");

const query_pr = {
    query: `
        query {
        user(login: "${openSource.githubUserName}") {
        name
        login
        bio
        bioHTML
        avatarUrl
        url
        twitterUsername
        repositories(first: 20) {
        nodes {
            id
            name
            createdAt,
                url,
                description,
            updatedAt,
            stargazerCount,
                isFork,
            forkCount,
            primaryLanguage {
                id,
                name,
                color
            },
            languages(first:1){
                nodes{
                    name,
                    color
                }
            },
        }
        }
    }
    }`,
};


const baseUrl = "https://api.github.com/graphql";


const headers = {
    "Content-Type": "application/json",
    Authorization: "bearer " + openSource.githubConvertedToken,
};

let detail;

fetch(baseUrl, {
    method: "POST",
    headers: headers,
    body: JSON.stringify(query_pr),
  })
    .then((response) => response.json() )
    .then((data) => {
        // const resp = data.data.user.repositories
        // repos = resp;
        // var name = document.getElementById('userName');
        // name.innerText = data.data.user.name;
        detail = data;
        console.log(data);
        console.log(data.data.user.name);

        const fullName = document.getElementById('name');
        const additionalName = document.getElementById('adName');
        const profileImage = document.getElementById('profile-image');
        const repoCount = document.getElementById('repo-count');
        const listRepositories = document.getElementById('myrepositories');


        fullName.innerHTML = detail.data.user.name;
        additionalName.innerText = detail.data.user.login;
        profileImage.innerHTML = `<img style="height:auto;" alt="" width="260" height="260" class="avatar avatar-u width-full border bg-white" src="${detail.data.user.avatarUrl}">`;
        repoCount.innerText = detail.data.user.repositories.nodes.length;
        starCount = document.getElementById('star-num');

        let repoList = detail.data.user.repositories.nodes.map(function(repo, i){

            return `<div class="repo-item col-flex px-24">
            <div class="col-r75">
                <div class="repo-name-container ib">
                    <h3 class="repo-name"><a href="${repo.url}">${repo.name}</a></h3>
                </div>
                <div class="repo-description ib mb-8 pr-24">
                    <p id="repo-desc pr-24">${repo.description}</p>
                </div>
                <div class="repo-detail-content mt-8">
                    <span class="mr-16">
                        <span class="repo-lang-color" style="background-color:${repo.languages.nodes.map(function(col){
                            return col.color;
                        })};"></span>
                        <span class="repo-prog-lang">${repo.languages.nodes.map(function(lang){
                            return lang.name;
                        })}</span>
                    </span>
                    <!-- Star Link -->
                    <a id="star-num" class="detail-link mr-16" href="#">
                        <svg aria-label="star" class="icon icon-star" viewBox="0 0 16 16" version="1.1" width="16" height="16" role="img"><path fill-rule="evenodd" d="M8 .25a.75.75 0 01.673.418l1.882 3.815 4.21.612a.75.75 0 01.416 1.279l-3.046 2.97.719 4.192a.75.75 0 01-1.088.791L8 12.347l-3.766 1.98a.75.75 0 01-1.088-.79l.72-4.194L.818 6.374a.75.75 0 01.416-1.28l4.21-.611L7.327.668A.75.75 0 018 .25zm0 2.445L6.615 5.5a.75.75 0 01-.564.41l-3.097.45 2.24 2.184a.75.75 0 01.216.664l-.528 3.084 2.769-1.456a.75.75 0 01.698 0l2.77 1.456-.53-3.084a.75.75 0 01.216-.664l2.24-2.183-3.096-.45a.75.75 0 01-.564-.41L8 2.694v.001z"></path></svg>

                        ${repo.stargazerCount}
                      </a>
                    <!-- Fork Link -->
                    <a class="detail-link mr-16" href="#">
                        <svg aria-label="fork" class="icon icon-repo-forked" viewBox="0 0 16 16" version="1.1" width="16" height="16" role="img"><path fill-rule="evenodd" d="M5 3.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm0 2.122a2.25 2.25 0 10-1.5 0v.878A2.25 2.25 0 005.75 8.5h1.5v2.128a2.251 2.251 0 101.5 0V8.5h1.5a2.25 2.25 0 002.25-2.25v-.878a2.25 2.25 0 10-1.5 0v.878a.75.75 0 01-.75.75h-4.5A.75.75 0 015 6.25v-.878zm3.75 7.378a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm3-8.75a.75.75 0 100-1.5.75.75 0 000 1.5z"></path></svg>
                        ${repo.forkCount}
                    </a>
                    <!-- Update link -->
                    <span>Updated</span>
                    <relative-time datetime="2020-11-21T02:55:24Z" class="no-wrap" title="Nov 21, 2020, 3:55 AM GMT+1">6 days ago</relative-time>
                </div>
            </div>

            <div class="col-r25">
                <div class="col-right">
                    <button class="btn star-btn">
                        <svg class="icon icon-star" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8 .25a.75.75 0 01.673.418l1.882 3.815 4.21.612a.75.75 0 01.416 1.279l-3.046 2.97.719 4.192a.75.75 0 01-1.088.791L8 12.347l-3.766 1.98a.75.75 0 01-1.088-.79l.72-4.194L.818 6.374a.75.75 0 01.416-1.28l4.21-.611L7.327.668A.75.75 0 018 .25zm0 2.445L6.615 5.5a.75.75 0 01-.564.41l-3.097.45 2.24 2.184a.75.75 0 01.216.664l-.528 3.084 2.769-1.456a.75.75 0 01.698 0l2.77 1.456-.53-3.084a.75.75 0 01.216-.664l2.24-2.183-3.096-.45a.75.75 0 01-.564-.41L8 2.694v.001z"></path></svg>
                        Star
                    </button>
                </div>
            </div>
        </div>
            `;
        }).join("");
        listRepositories.innerHTML = repoList;
    } )
    .catch(err => console.log(err))

    // Test

// function runTest() {
//     fetch(baseUrl, {
//         method: "POST",
//         headers: headers,
//         body: JSON.stringify(query_pr),
//       })
//         .then((response) => response.json() )
//         .then((data) => {
//             return data;
//         } )
//         .catch(err => console.log(err))
// }


// runTest();

// Another way using Asyn

// const fetchRepo = async () => {
//     const res = await fetch(baseUrl, {
//             method: "POST",
//             headers: headers,
//             body: JSON.stringify(query_pr),
//           })

//     const data = await res.json()
//     const resp = data.data.user.repositories
//     repos = resp
//     console.log(repos)
// }

// fetchRepo()

// const fullName = document.getElementById('name');
// const additionalName = document.getElementById('adName');
// const profileImage = document.getElementById('profile-image');


// function updateInfo() {
//     fullName.innerHTML = detail.data.user.name;
// }

// updateInfo();